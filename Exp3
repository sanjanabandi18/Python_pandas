{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyOd+/BMA5P/bFX77ucB5BdK",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/sanjanabandi18/Python_pandas/blob/main/Exp3\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cRPI5o2yIEHO",
        "outputId": "a7a10310-87ab-4c30-abf7-c97938f0b402"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    1\n",
            "1    2\n",
            "2    3\n",
            "3    4\n",
            "4    5\n",
            "dtype: int64\n"
          ]
        }
      ],
      "source": [
        "#Write a Pandas program to create and display a one-dimensional array-like\n",
        "#object containing an array of data using Pandas module.\n",
        "import pandas as pd\n",
        "ds=pd.Series([1,2,3,4,5])\n",
        "print(ds)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n"
      ],
      "metadata": {
        "id": "9ZLrW5-OI43y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Write a Pandas program to convert a Panda module Series to Python list and\n",
        "#it's type\n",
        "import pandas as pd\n",
        "ds=pd.Series([1,2,3,4,5])\n",
        "print(\"Pandas series and its type\")\n",
        "print(ds)\n",
        "print(type(ds))\n",
        "print(\"converting pandas series into list\")\n",
        "list=ds.tolist()\n",
        "print(list)\n",
        "print(type(list))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "m-nFG17NI-jv",
        "outputId": "d7fad88a-4403-4819-894c-253356713df1"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Pandas series and its type\n",
            "0    1\n",
            "1    2\n",
            "2    3\n",
            "3    4\n",
            "4    5\n",
            "dtype: int64\n",
            "<class 'pandas.core.series.Series'>\n",
            "converting pandas series into list\n",
            "[1, 2, 3, 4, 5]\n",
            "<class 'list'>\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Write a Pandas program to add, subtract, multiple and divide two Pandas\n",
        "#Series.\n",
        "import pandas as pd\n",
        "ds1=pd.Series([2,3,4,5])\n",
        "ds2=pd.Series([1,2,3,4])\n",
        "print(\"Data Series 1\")\n",
        "print(ds1)\n",
        "print(\"Data Series 2\")\n",
        "print(ds2)\n",
        "print(\"Addition of two Series\")\n",
        "print(ds1+ds2)\n",
        "print(\"Subtraction of two Series\")\n",
        "print(ds1-ds2)\n",
        "print(\"Multiplication of two Series\")\n",
        "print(ds1*ds2)\n",
        "print(\"Division of two Series\")\n",
        "print(ds1/ds2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WdhNr2N_K6SZ",
        "outputId": "059b04e3-4c36-4876-bf08-2cfb0e2c0a7d"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data Series 1\n",
            "0    2\n",
            "1    3\n",
            "2    4\n",
            "3    5\n",
            "dtype: int64\n",
            "Data Series 2\n",
            "0    1\n",
            "1    2\n",
            "2    3\n",
            "3    4\n",
            "dtype: int64\n",
            "Addition of two Series\n",
            "0    3\n",
            "1    5\n",
            "2    7\n",
            "3    9\n",
            "dtype: int64\n",
            "Subtraction of two Series\n",
            "0    1\n",
            "1    1\n",
            "2    1\n",
            "3    1\n",
            "dtype: int64\n",
            "Multiplication of two Series\n",
            "0     2\n",
            "1     6\n",
            "2    12\n",
            "3    20\n",
            "dtype: int64\n",
            "Division of two Series\n",
            "0    2.000000\n",
            "1    1.500000\n",
            "2    1.333333\n",
            "3    1.250000\n",
            "dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Write a Pandas program to convert a NumPy array to a Pandas series.\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "np_array=np.array([1,2,3,4,5])\n",
        "print(\"Numpy Array\")\n",
        "print(np_array)\n",
        "new_series=pd.Series(np_array)\n",
        "print(\"Converted Pandas Series\")\n",
        "print(new_series)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3EglSgjDNmNH",
        "outputId": "7a243c82-7e42-4d81-85d4-85f3982994ff"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Numpy Array\n",
            "[1 2 3 4 5]\n",
            "Converted Pandas Series\n",
            "0    1\n",
            "1    2\n",
            "2    3\n",
            "3    4\n",
            "4    5\n",
            "dtype: int64\n"
          ]
        }
      ]
    }
  ]
}